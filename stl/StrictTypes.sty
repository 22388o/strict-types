{-
  Id: subject_leonid_rudolf_3VG9Cjoyx9MMAY2y4EZBgX9YQoyMngFfNrGLAUFbzQFU
  Name: StrictTypes
  Description: Confined generalized algebraic data types (GADT)
  Author: Dr Maxim Orlovsky <orlovsky@ubideco.org>
  Copyright (C) 2023 UBIDECO Institute. All rights reserved.
  License: Apache-2.0
-}

typelib StrictTypes -- subject_leonid_rudolf_3VG9Cjoyx9MMAY2y4EZBgX9YQoyMngFfNrGLAUFbzQFU

-- no dependencies

data BuildFragment    :: ident Ident
                       | digits Ident
data Dependency       :: id TypeLibId
                       , name LibName
                       , ver SemVer
data EnumVariants     :: {Variant ^ 1..0xff}
data ExternRef        :: name TypeName
                       , lib LibName
                       , id SemId
data FieldInlineRef   :: name FieldName, ty InlineRef
data FieldInlineRef1  :: name FieldName, ty InlineRef1
data FieldInlineRef2  :: name FieldName, ty InlineRef2
data FieldKeyTy       :: name FieldName, ty KeyTy
data FieldLibRef      :: name FieldName, ty LibRef
data FieldName        :: Ident
data Ident            :: U8
data InlineRef        :: inline TyInlineRef1
                       | named (TypeName, SemId)
                       | extern ExternRef
data InlineRef1       :: inline TyInlineRef2
                       | named (TypeName, SemId)
                       | extern ExternRef
data InlineRef2       :: inline TyKeyTy
                       | named (TypeName, SemId)
                       | extern ExternRef
data KeyTy            :: primitive Primitive
                       | enum:3 EnumVariants
                       | array:7 U16
                       | unicode:16 Sizing
                       | ascii Sizing
                       | bytes Sizing
data LibAlias         :: Ident
data LibName          :: Ident
data LibRef           :: inline TyInlineRef
                       | named (TypeName, SemId)
                       | extern ExternRef
data LibType          :: name TypeName, ty TyLibRef
data NamedFieldsInlineRef :: [FieldInlineRef ^ 1..0xff]
data NamedFieldsInlineRef1 :: [FieldInlineRef1 ^ 1..0xff]
data NamedFieldsInlineRef2 :: [FieldInlineRef2 ^ 1..0xff]
data NamedFieldsKeyTy :: [FieldKeyTy ^ 1..0xff]
data NamedFieldsLibRef :: [FieldLibRef ^ 1..0xff]
data PreFragment      :: ident Ident
                       | digits U128
data Primitive        :: U8
data SemId            :: [U8 ^ 32]
data SemVer           :: major U16
                       , minor U16
                       , patch U16
                       , pre [PreFragment ^ ..0xff]
                       , build [BuildFragment ^ ..0xff]
data Sizing           :: min U64, max U64
data TyInlineRef      :: primitive Primitive
                       | unicode ()
                       | enum:3 EnumVariants
                       | union UnionVariantsInlineRef
                       | tuple UnnamedFieldsInlineRef
                       | struct NamedFieldsInlineRef
                       | array (InlineRef, U16)
                       | list (InlineRef, Sizing)
                       | set (InlineRef, Sizing)
                       | map (KeyTy, InlineRef, Sizing)
data TyInlineRef1     :: primitive Primitive
                       | unicode ()
                       | enum:3 EnumVariants
                       | union UnionVariantsInlineRef1
                       | tuple UnnamedFieldsInlineRef1
                       | struct NamedFieldsInlineRef1
                       | array (InlineRef1, U16)
                       | list (InlineRef1, Sizing)
                       | set (InlineRef1, Sizing)
                       | map (KeyTy, InlineRef1, Sizing)
data TyInlineRef2     :: primitive Primitive
                       | unicode ()
                       | enum:3 EnumVariants
                       | union UnionVariantsInlineRef2
                       | tuple UnnamedFieldsInlineRef2
                       | struct NamedFieldsInlineRef2
                       | array (InlineRef2, U16)
                       | list (InlineRef2, Sizing)
                       | set (InlineRef2, Sizing)
                       | map (KeyTy, InlineRef2, Sizing)
data TyKeyTy          :: primitive Primitive
                       | unicode ()
                       | enum:3 EnumVariants
                       | union UnionVariantsKeyTy
                       | tuple UnnamedFieldsKeyTy
                       | struct NamedFieldsKeyTy
                       | array (KeyTy, U16)
                       | list (KeyTy, Sizing)
                       | set (KeyTy, Sizing)
                       | map (KeyTy, KeyTy, Sizing)
data TyLibRef         :: primitive Primitive
                       | unicode ()
                       | enum:3 EnumVariants
                       | union UnionVariantsLibRef
                       | tuple UnnamedFieldsLibRef
                       | struct NamedFieldsLibRef
                       | array (LibRef, U16)
                       | list (LibRef, Sizing)
                       | set (LibRef, Sizing)
                       | map (KeyTy, LibRef, Sizing)
data TypeLib          :: name LibName
                       , dependencies {U8 -> ^ ..0xff Dependency}
                       , types {U8 -> ^ 1.. LibType}
data TypeLibId        :: [U8 ^ 32]
data TypeName         :: Ident
data UnionVariantsInlineRef :: {U8 -> ^ ..0xff VariantInfoInlineRef}
data UnionVariantsInlineRef1 :: {U8 -> ^ ..0xff VariantInfoInlineRef1}
data UnionVariantsInlineRef2 :: {U8 -> ^ ..0xff VariantInfoInlineRef2}
data UnionVariantsKeyTy :: {U8 -> ^ ..0xff VariantInfoKeyTy}
data UnionVariantsLibRef :: {U8 -> ^ ..0xff VariantInfoLibRef}
data UnnamedFieldsInlineRef :: [InlineRef ^ 1..0xff]
data UnnamedFieldsInlineRef1 :: [InlineRef1 ^ 1..0xff]
data UnnamedFieldsInlineRef2 :: [InlineRef2 ^ 1..0xff]
data UnnamedFieldsKeyTy :: [KeyTy ^ 1..0xff]
data UnnamedFieldsLibRef :: [LibRef ^ 1..0xff]
data Variant          :: name FieldName, tag U8
data VariantInfoInlineRef :: name FieldName, ty InlineRef
data VariantInfoInlineRef1 :: name FieldName, ty InlineRef1
data VariantInfoInlineRef2 :: name FieldName, ty InlineRef2
data VariantInfoKeyTy :: name FieldName, ty KeyTy
data VariantInfoLibRef :: name FieldName, ty LibRef

